version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_SUPABASE_URL=${NEXT_PUBLIC_SUPABASE_URL}
      - NEXT_PUBLIC_SUPABASE_ANON_KEY=${NEXT_PUBLIC_SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=${NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY}
      - CLERK_SECRET_KEY=${CLERK_SECRET_KEY}
      - RESEND_API_KEY=${RESEND_API_KEY}
      - SKRIBBLE_API_KEY=${SKRIBBLE_API_KEY}
      - SKRIBBLE_ACCOUNT_ID=${SKRIBBLE_ACCOUNT_ID}
      - SKRIBBLE_WEBHOOK_SECRET=${SKRIBBLE_WEBHOOK_SECRET}
      - WILL_ENCRYPTION_KEY=${WILL_ENCRYPTION_KEY}
    volumes:
      - ./logs:/app/logs
    networks:
      - legacyguard-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - legacyguard-network
    restart: unless-stopped
    command: redis-server --appendonly yes

volumes:
  redis-data:

networks:
  legacyguard-network:
    driver: bridge
